// script/main.js
import { subscribeProducts, updateProduct } from './firebase.js';

// ================== –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å ==================

const ADMIN_PASSWORD = "@123";

// –û—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ –∞–¥–º–∏–Ω–∫–∏ –ø–æ Ctrl + Shift + F12
document.addEventListener("keydown", (e) => {
  if (e.ctrlKey && e.shiftKey && e.code === "F12") {
    const panel = document.getElementById("admin-panel");
    if (!panel) return;

    if (panel.style.display === "none" || panel.style.display === "") {
      // –ï—Å–ª–∏ –ø–∞–Ω–µ–ª—å —Å–∫—Ä—ã—Ç–∞ ‚Äî —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–∞—Ä–æ–ª—å
      const input = prompt("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:");
      if (input === ADMIN_PASSWORD) {
        panel.style.display = "block";
      } else if (input !== null) {
        alert("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!");
      }
    } else {
      // –ï—Å–ª–∏ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç–∞ ‚Äî –∑–∞–∫—Ä—ã–≤–∞–µ–º
      panel.style.display = "none";
    }
  }
});

// –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –≤–Ω—É—Ç—Ä–∏ –ø–∞–Ω–µ–ª–∏
const closeBtn = document.getElementById("close-admin");
if (closeBtn) {
  closeBtn.addEventListener("click", () => {
    const panel = document.getElementById("admin-panel");
    if (panel) panel.style.display = "none";
  });
}

// –†–µ–Ω–¥–µ—Ä –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
function renderAdminPanel(products) {
  const container = document.getElementById("admin-products");
  if (!container) return;

  container.innerHTML = "";

  for (const id in products) {
    const data = products[id];

    const div = document.createElement("div");
    div.style.border = "1px solid #ccc";
    div.style.margin = "10px";
    div.style.padding = "10px";
    div.style.display = "flex";
    div.style.alignItems = "center";
    div.style.gap = "15px";

    div.innerHTML = `
      <img src="${data.image || 'images/default.jpg'}" alt="Product Image" style="width:80px; height:80px; object-fit:cover; border-radius:8px; border:1px solid #ccc;">
      <div>
        <h3>${id}</h3>
        <label>Title: <input type="text" value="${data.title || ''}" class="admin-title"></label><br>
        <label>Art: <input type="text" value="${data.art || ''}" class="admin-art"></label><br>
        <label>Price: <input type="number" value="${data.price || 0}" class="admin-price"></label><br>
        <label>–°–∫—Ä—ã—Ç—å: <input type="checkbox" class="admin-hidden" ${data.hidden ? 'checked' : ''}></label><br>
        <button class="admin-save">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
      </div>
    `;

    div.querySelector(".admin-save").addEventListener("click", () => {
      const newTitle = div.querySelector(".admin-title").value;
      const newArt = div.querySelector(".admin-art").value;
      const newPrice = parseFloat(div.querySelector(".admin-price").value) || 0;
      const isHidden = div.querySelector(".admin-hidden").checked;

      updateProduct(id, {
        title: newTitle,
        art: newArt,
        price: newPrice,
        hidden: isHidden,
      });
    });

    container.appendChild(div);
  }
}



// ================== –ö–∞—Ä—Ç–æ—á–∫–∏ ==================
const productCards = document.querySelectorAll('.product');

subscribeProducts((products) => {
  productCards.forEach(card => {
    const id = card.dataset.id;
    const data = products[id];

    if (data) {
      card.querySelector('.product-title').textContent = data.title || '';
      card.querySelector('.product-art').textContent = data.art || '';
      card.querySelector('.product-price').textContent = data.price ? `${data.price} –≥—Ä–Ω` : '';
      card.style.display = data.hidden ? 'none' : 'block';
    } else {
      card.style.display = 'none';
    }
  });

  renderAdminPanel(products);
});


// ================== –ö–æ—Ä–∑–∏–Ω–∞ ==================
document.addEventListener("DOMContentLoaded", () => {
  const cartElement = document.querySelector(".cart-section");
  const cartToggleBtn = document.querySelector(".cart_btn"); 
  const cartCloseBtn = document.querySelector(".cart-close-btn");
  const cartItemsContainer = document.getElementById("cart-items");
  const cartTotal = document.getElementById("cart-total-value");
  const orderForm = document.getElementById("order-form");

  const cartCountEl = document.querySelector(".cart-count");

  if (cartElement) cartElement.style.display = "none";

  cartToggleBtn?.addEventListener("click", (e) => {
    e.preventDefault();
    cartElement.style.display =
      cartElement.style.display === "block" ? "none" : "block";
  });

  cartCloseBtn?.addEventListener("click", () => {
    cartElement.style.display = "none";
  });

  let cart = JSON.parse(localStorage.getItem("cart")) || [];

  function saveCart() {
    localStorage.setItem("cart", JSON.stringify(cart));
  }

  function updateCartCount() {
    if (!cartCountEl) return;
    const count = cart.reduce((sum, item) => sum + item.quantity, 0);
    cartCountEl.textContent = count;
    cartCountEl.style.display = count > 0 ? "inline-block" : "none";
  }

  function renderCart() {
    cartItemsContainer.innerHTML = "";
    let total = 0;

    cart.forEach((item, index) => {
      total += item.price * item.quantity;

      const itemEl = document.createElement("div");
      itemEl.className = "cart-item";
      itemEl.innerHTML = `
        <img src="${item.image}" alt="${item.name}" style="width:60px;height:60px;object-fit:cover;">
        <div style="flex:1;">
          <strong>${item.name}</strong><br>
          –ê—Ä—Ç–∏–∫—É–ª: ${item.art || "‚Äî"}<br>
          –¶—ñ–Ω–∞: ${item.price} –≥—Ä–Ω<br>
          –ö—ñ–ª—å–∫—ñ—Å—Ç—å: <input type="number" min="1" value="${item.quantity}" data-index="${index}" class="quantity"><br>
          –°—É–º–∞: ${item.price * item.quantity} –≥—Ä–Ω
        </div>
        <button data-index="${index}" class="remove">üóëÔ∏è</button>
      `;
      cartItemsContainer.appendChild(itemEl);
    });

    cartTotal.textContent = total;
    saveCart();
    updateCartCount();
  }

  // === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É ===
  // === –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ—Ä–∑–∏–Ω—É ===
document.querySelectorAll(".add-to-cart").forEach((button) => {
  button.addEventListener("click", () => {
    const product = button.closest(".product");
    const name = product.querySelector(".product-title").textContent.trim();
    const price = parseFloat(product.querySelector(".product-price").textContent) || 0;
    const image = product.querySelector("img")?.src || "";
    const art = product.dataset.id || ""; // –∞—Ä—Ç–∏–∫—É–ª –∏–∑ data-id

    const existing = cart.find((item) => item.name === name);
    if (existing) {
      existing.quantity += 1;
    } else {
      cart.push({ name, price, image, art, quantity: 1 });
    }

    renderCart();

    // === –í–∏–∑—É–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ "–î–æ–¥–∞–Ω–æ" ===
    button.textContent = "–î–æ–¥–∞–Ω–æ üëú";
    button.style.backgroundColor = "#28a745"; // –∑–µ–ª—ë–Ω—ã–π
    button.style.color = "#fff";

    // –ß–µ—Ä–µ–∑ 1.5 —Å–µ–∫ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–∑–∞–¥
    setTimeout(() => {
      button.textContent = "–£ –∫–æ—à–∏–∫";
      button.style.backgroundColor = "";
      button.style.color = "";
    }, 1500);
  });
});


  // === –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ===
  cartItemsContainer.addEventListener("click", (e) => {
    if (e.target.classList.contains("remove")) {
      const index = e.target.dataset.index;
      cart.splice(index, 1);
      renderCart();
    }
  });

  // === –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ ===
  cartItemsContainer.addEventListener("input", (e) => {
    if (e.target.classList.contains("quantity")) {
      const index = e.target.dataset.index;
      const newQty = parseInt(e.target.value);
      if (newQty > 0) {
        cart[index].quantity = newQty;
        renderCart();
      }
    }
  });

  // === –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ Formspree ===
  orderForm?.addEventListener("submit", (e) => {
    if (cart.length === 0) {
      e.preventDefault();
      alert("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!");
      return;
    }

    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ –ø–æ–ª–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
    const oldInput = orderForm.querySelector('input[name="cart-details"]');
    if (oldInput) oldInput.remove();

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
    const cartDetails = cart.map((item) => {
      return `–ù–∞–∑–≤–∞: ${item.name}\n–ê—Ä—Ç–∏–∫—É–ª: ${item.art || "‚Äî"}\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å: ${item.quantity}\n–¶—ñ–Ω–∞ –∑–∞ —à—Ç: ${item.price} –≥—Ä–Ω\n–°—É–º–∞: ${item.price * item.quantity} –≥—Ä–Ω\n---`;
    }).join("\n");

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä—ã—Ç–æ–µ –ø–æ–ª–µ
    const hiddenInput = document.createElement("input");
    hiddenInput.type = "hidden";
    hiddenInput.name = "cart-details";
    hiddenInput.value = cartDetails;
    orderForm.appendChild(hiddenInput);

    // –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
    setTimeout(() => {
      localStorage.removeItem("cart");
      cart = [];
      renderCart();
    }, 2000);
  });

  renderCart();
});

